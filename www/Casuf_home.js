/*
 * JS for Casuf_home generated by Appery.io
 */

Apperyio.getProjectGUID = function() {
    return '3e68be1c-8a24-4d96-b9b4-eea32e219862';
};

function navigateTo(outcome, useAjax) {
    Apperyio.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Apperyio.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Apperyio.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Apperyio.setDetailContent(pageUrl);
}

Apperyio.AppPages = [{
    "name": "Casuf_home",
    "location": "#Casuf_home"
}, {
    "name": "CasufBrowser",
    "location": "#CasufBrowser"
}, {
    "name": "Recover",
    "location": "#Recover"
}, {
    "name": "About",
    "location": "#About"
}, {
    "name": "chatScreen",
    "location": "#chatScreen"
}, {
    "name": "Maps",
    "location": "#Maps"
}, {
    "name": "logIn",
    "location": "#logIn"
}, {
    "name": "Register",
    "location": "#Register"
}, {
    "name": "Twitter",
    "location": "#Twitter"
}];

Casuf_home_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilegrid_12': 'Casuf_home_mobilegrid_12',
        'mobilegridcell_13': 'Casuf_home_mobilegridcell_13',
        'menuimg_1': 'Casuf_home_menuimg_1',
        'mobilegridcell_14': 'Casuf_home_mobilegridcell_14',
        'menubut_1': 'Casuf_home_menubut_1',
        'mobilegridcell_15': 'Casuf_home_mobilegridcell_15',
        'mobileimage_21': 'Casuf_home_mobileimage_21',
        'mobilegridcell_16': 'Casuf_home_mobilegridcell_16',
        'menubut_2': 'Casuf_home_menubut_2',
        'mobilegridcell_17': 'Casuf_home_mobilegridcell_17',
        'mobileimage_23': 'Casuf_home_mobileimage_23',
        'mobilegridcell_18': 'Casuf_home_mobilegridcell_18',
        'connectbutton_1': 'Casuf_home_connectbutton_1',
        'mobilegrid_24': 'Casuf_home_mobilegrid_24',
        'mobilegridcell_25': 'Casuf_home_mobilegridcell_25',
        'mapsimage': 'Casuf_home_mapsimage',
        'mobilegridcell_26': 'Casuf_home_mobilegridcell_26',
        'homemap_1': 'Casuf_home_homemap_1',
        'mobilegrid_27': 'Casuf_home_mobilegrid_27',
        'mobilegridcell_28': 'Casuf_home_mobilegridcell_28',
        'mobileimage_34': 'Casuf_home_mobileimage_34',
        'mobilegridcell_29': 'Casuf_home_mobilegridcell_29',
        'browserbutton': 'Casuf_home_browserbutton',
        'mobileimage_22': 'Casuf_home_mobileimage_22'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'Casuf_home';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    var Casuf_home_beforeshow = function() {
            Apperyio.CurrentScreen = "Casuf_home";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var Casuf_home_onLoad = function() {
            Casuf_home_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            Casuf_home_deviceEvents();
            Casuf_home_windowEvents();
            Casuf_home_elementsEvents();
        };

    // screen window events
    var Casuf_home_windowEvents = function() {

            $('#Casuf_home').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var Casuf_home_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var Casuf_home_elementsExtraJS = function() {
            // screen (Casuf_home) extra code

        };

    // screen elements handler
    var Casuf_home_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

            $(document).off("click", '#Casuf_home_mobilecontainer1 [name="menubut_1"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        Apperyio.navigateTo('About', {
                            transition: 'slide',
                            reverse: false
                        });

                    }
                },
            }, '#Casuf_home_mobilecontainer1 [name="menubut_1"]');

            $(document).off("click", '#Casuf_home_mobilecontainer1 [name="menubut_2"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        Apperyio.navigateTo('Twitter', {
                            reverse: false
                        });

                    }
                },
            }, '#Casuf_home_mobilecontainer1 [name="menubut_2"]');

            $(document).off("click", '#Casuf_home_mobilecontainer1 [name="connectbutton_1"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        Apperyio.navigateTo('logIn', {
                            reverse: false
                        });

                    }
                },
            }, '#Casuf_home_mobilecontainer1 [name="connectbutton_1"]');

            $(document).off("click", '#Casuf_home_mobilecontainer1 [name="homemap_1"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        Apperyio.navigateTo('Maps', {
                            reverse: false
                        });

                    }
                },
            }, '#Casuf_home_mobilecontainer1 [name="homemap_1"]');

            $(document).off("click", '#Casuf_home_mobilecontainer1 [name="browserbutton"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        Apperyio.navigateTo('CasufBrowser', {
                            reverse: false
                        });

                    }
                },
            }, '#Casuf_home_mobilecontainer1 [name="browserbutton"]');

        };

    $(document).off("pagebeforeshow", "#Casuf_home").on("pagebeforeshow", "#Casuf_home", function(event, ui) {
        Casuf_home_beforeshow();
    });

    if (runBeforeShow) {
        Casuf_home_beforeshow();
    } else {
        Casuf_home_onLoad();
    }
};

$(document).off("pagecreate", "#Casuf_home").on("pagecreate", "#Casuf_home", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    Casuf_home_js();
});

CasufBrowser_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'link_source': 'CasufBrowser_link_source',
        'open_browser_button': 'CasufBrowser_open_browser_button',
        'browser_type_group': 'CasufBrowser_browser_type_group',
        'cordova_web_view': 'CasufBrowser_cordova_web_view',
        'system_browser': 'CasufBrowser_system_browser',
        'in_app_browser': 'CasufBrowser_in_app_browser',
        'html_8': 'CasufBrowser_html_8'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'CasufBrowser';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    var CasufBrowser_beforeshow = function() {
            Apperyio.CurrentScreen = "CasufBrowser";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var CasufBrowser_onLoad = function() {
            CasufBrowser_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            CasufBrowser_deviceEvents();
            CasufBrowser_windowEvents();
            CasufBrowser_elementsEvents();
        };

    // screen window events
    var CasufBrowser_windowEvents = function() {

            $('#CasufBrowser').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var CasufBrowser_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var CasufBrowser_elementsExtraJS = function() {
            // screen (CasufBrowser) extra code

        };

    // screen elements handler
    var CasufBrowser_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

            $(document).off("click", '#CasufBrowser_mobilecontainer [name="open_browser_button"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        var radioGroup = $('input[name=browser_type_group]:checked');
                        window.open(Appery('link_source').val(), radioGroup.val());

                    }
                },
            }, '#CasufBrowser_mobilecontainer [name="open_browser_button"]');

        };

    $(document).off("pagebeforeshow", "#CasufBrowser").on("pagebeforeshow", "#CasufBrowser", function(event, ui) {
        CasufBrowser_beforeshow();
    });

    if (runBeforeShow) {
        CasufBrowser_beforeshow();
    } else {
        CasufBrowser_onLoad();
    }
};

$(document).off("pagecreate", "#CasufBrowser").on("pagecreate", "#CasufBrowser", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    CasufBrowser_js();
});

Recover_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilelabel_1': 'Recover_mobilelabel_1',
        'usernameinput_1': 'Recover_usernameinput_1',
        'recoverbutton_1': 'Recover_recoverbutton_1'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'Recover';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    var Recover_beforeshow = function() {
            Apperyio.CurrentScreen = "Recover";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var Recover_onLoad = function() {
            Recover_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            Recover_deviceEvents();
            Recover_windowEvents();
            Recover_elementsEvents();
        };

    // screen window events
    var Recover_windowEvents = function() {

            $('#Recover').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var Recover_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var Recover_elementsExtraJS = function() {
            // screen (Recover) extra code

        };

    // screen elements handler
    var Recover_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

        };

    $(document).off("pagebeforeshow", "#Recover").on("pagebeforeshow", "#Recover", function(event, ui) {
        Recover_beforeshow();
    });

    if (runBeforeShow) {
        Recover_beforeshow();
    } else {
        Recover_onLoad();
    }
};

$(document).off("pagecreate", "#Recover").on("pagecreate", "#Recover", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    Recover_js();
});

About_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'html_17': 'About_html_17'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'About';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    var About_beforeshow = function() {
            Apperyio.CurrentScreen = "About";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var About_onLoad = function() {
            About_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            About_deviceEvents();
            About_windowEvents();
            About_elementsEvents();
        };

    // screen window events
    var About_windowEvents = function() {

            $('#About').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var About_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var About_elementsExtraJS = function() {
            // screen (About) extra code

        };

    // screen elements handler
    var About_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

        };

    $(document).off("pagebeforeshow", "#About").on("pagebeforeshow", "#About", function(event, ui) {
        About_beforeshow();
    });

    if (runBeforeShow) {
        About_beforeshow();
    } else {
        About_onLoad();
    }
};

$(document).off("pagecreate", "#About").on("pagecreate", "#About", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    About_js();
});

Maps_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'homebutton_10': 'Maps_homebutton_10',
        'google_map': 'Maps_google_map',
        'marker_2': 'Maps_marker_2',
        'get_directions': 'Maps_get_directions',
        'from': 'Maps_from',
        'to': 'Maps_to',
        'place_marker': 'Maps_place_marker',
        'marker_location': 'Maps_marker_location',
        'show_traffic': 'Maps_show_traffic',
        'get_markers': 'Maps_get_markers'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'Maps';

    /*
     * Nonvisual components
     */
    var datasources = [];

    convert_address = new Apperyio.DataSource(ConvertAddress, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("Maps");
        },
        'onSuccess': function(data) {
            var markerLatLng = new google.maps.LatLng(localStorage.getItem('markerLat'), localStorage.getItem('markerLng'));

            var marker = new google.maps.Marker({
                position: markerLatLng,
                map: map,
                title: data.results[0].address_components[0].long_name,
                animation: google.maps.Animation.DROP
            });

            bounds.extend(markerLatLng);
            map.fitBounds(bounds);
        },
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['results[0]', 'geometry', 'location', 'lat'],
            'ID': '___local_storage___',
            'ATTR': 'markerLat'
        }, {
            'PATH': ['results[0]', 'geometry', 'location', 'lng'],
            'ID': '___local_storage___',
            'ATTR': 'markerLng'
        }],
        'requestMapping': [{
            'PATH': ['address'],
            'TYPE': 'STRING',
            'ATTR': 'Stellenbosch'
        }, {
            'PATH': ['sensor'],
            'TYPE': 'STRING',
            'ATTR': 'Cape Town'
        }]
    });

    datasources.push(convert_address);

    get_db_locations = new Apperyio.DataSource(location_locations_read_service, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("Maps");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['$'],
            'ID': '___js___',
            'TRANSFORMATION': function(value, element) {
                JSON.stringify(value.location, convertAddress);

                function convertAddress(key, value) {
                    convert_address.execute({
                        'data': {
                            'address': value,
                            'sensor': false
                        }
                    });
                }
            },
            'SET': []
        }],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }]
    });

    datasources.push(get_db_locations);

    /*
     * Events and handlers
     */

    // Before Show
    var Maps_beforeshow = function() {
            Apperyio.CurrentScreen = "Maps";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var Maps_onLoad = function() {
            Maps_elementsExtraJS();

            initialize();

            // TODO fire device events only if necessary (with JS logic)
            Maps_deviceEvents();
            Maps_windowEvents();
            Maps_elementsEvents();
        };

    // screen window events
    var Maps_windowEvents = function() {

            $('#Maps').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var Maps_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var Maps_elementsExtraJS = function() {
            // screen (Maps) extra code

            /* google_map */

            $("[name = 'google_map']").wrap("<div/>");
            $("[name = 'google_map']").parent().css("margin-left", $("[name = 'google_map']").css("margin-left"));
            $("[name = 'google_map']").parent().css("margin-right", $("[name = 'google_map']").css("margin-right"));
            $("[name = 'google_map']").css("margin-left", '0');
            $("[name = 'google_map']").css("margin-right", '0');

            var google_map_options = {
                markerSourceName: "google_map_markers",
                latitude: "",
                longitude: "",
                address: "",
                zoom: 5,
                showLocationMarker: false
            }

            Apperyio.__registerComponent('google_map', new Apperyio.ApperyMapComponent("google_map", google_map_options));
            $("[name='google_map_markers'] [apperytype='marker']").attr("reRender", "google_map");
            $("[name='google_map']").closest("[data-role='page']").bind({
                pagecontainershow: function() {
                    if (Apperyio('google_map') != undefined) {
                        Apperyio('google_map').refresh();
                    }
                }
            });

        };

    // screen elements handler
    var Maps_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

            $(document).off("click", '#Maps_mobileheader [name="homebutton_10"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        Apperyio.navigateTo('Casuf_home', {
                            reverse: false
                        });

                    }
                },
            }, '#Maps_mobileheader [name="homebutton_10"]');

            $(document).off("click", '#Maps_mobilecontainer [name="get_directions"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        var sourceAddress = Apperyio("from").val();
                        var destinationAddress = Apperyio("to").val();
                        displayDirections(sourceAddress, destinationAddress, map);

                    }
                },
            }, '#Maps_mobilecontainer [name="get_directions"]');

            $(document).off("click", '#Maps_mobilecontainer [name="place_marker"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        var locations = new Array();
                        locations = Apperyio('marker_location').val().split(",");

                        for (var i = 0; i < locations.length; i++) {
                            convert_address.execute({
                                'data': {
                                    'address': locations[i],
                                    'sensor': false
                                }
                            });
                        };

                    }
                },
            }, '#Maps_mobilecontainer [name="place_marker"]');

            $(document).off("click", '#Maps_mobilecontainer [name="show_traffic"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        var trafficLayer = new google.maps.TrafficLayer();
                        trafficLayer.setMap(map);

                    }
                },
            }, '#Maps_mobilecontainer [name="show_traffic"]');
            $(document).off("click", '#Maps_mobilecontainer [name="get_markers"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        try {
                            get_db_locations.execute({})
                        } catch (ex) {
                            console.log(ex.name + '  ' + ex.message);
                            hideSpinner();
                        };

                    }
                },
            }, '#Maps_mobilecontainer [name="get_markers"]');

        };

    $(document).off("pagebeforeshow", "#Maps").on("pagebeforeshow", "#Maps", function(event, ui) {
        Maps_beforeshow();
    });

    if (runBeforeShow) {
        Maps_beforeshow();
    } else {
        Maps_onLoad();
    }
};

$(document).off("pagecreate", "#Maps").on("pagecreate", "#Maps", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    Maps_js();
});

chatScreen_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'logoutButton': 'chatScreen_logoutButton',
        'messageField': 'chatScreen_messageField',
        'mobilegrid_2': 'chatScreen_mobilegrid_2',
        'mobilegridcell_3': 'chatScreen_mobilegridcell_3',
        'updateButton': 'chatScreen_updateButton',
        'mobilegridcell_4': 'chatScreen_mobilegridcell_4',
        'sendButton': 'chatScreen_sendButton',
        'html_10': 'chatScreen_html_10',
        'authorField': 'chatScreen_authorField',
        'dateField': 'chatScreen_dateField',
        'textField': 'chatScreen_textField'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'chatScreen';

    /*
     * Nonvisual components
     */
    var datasources = [];

    messageListService = new Apperyio.DataSource(messages_messages_list_service, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("chatScreen");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['$'],
            'ID': 'html_10',
            'SET': [{
                'PATH': ['user_name'],
                'ID': 'authorField',
                'ATTR': '@'
            }, {
                'PATH': ['text'],
                'ID': 'textField',
                'ATTR': '@'
            }, {
                'PATH': ['_createdAt'],
                'ID': 'dateField',
                'ATTR': '@',
                'TRANSFORMATION': function(value, element) {
                    return value.split('.')[0];
                }
            }]
        }],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }]
    });

    datasources.push(messageListService);

    messageCreateService = new Apperyio.DataSource(messages_messages_create_service, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("chatScreen");
        },
        'onSuccess': function(data) {
            try {
                messageListService.execute({})
            } catch (ex) {
                console.log(ex.name + '  ' + ex.message);
                hideSpinner();
            };
            setText('chatScreen_messageField', '');
        },
        'onError': function(jqXHR, textStatus, errorThrown) {
            alert("Failed to send message");
        },
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }, {
            'PATH': ['user_name'],
            'TYPE': 'STRING',
            'ID': '___local_storage___',
            'ATTR': 'currentUserName'
        }, {
            'PATH': ['user_id'],
            'TYPE': 'STRING',
            'ID': '___local_storage___',
            'ATTR': 'currentUserid'
        }, {
            'PATH': ['text'],
            'TYPE': 'STRING',
            'ID': 'messageField',
            'ATTR': 'value'
        }, {
            'PATH': ['acl'],
            'TYPE': 'OBJECT',
            'ATTR': {
                "*": {
                    "write": true,
                    "read": true
                }
            }
        }]
    });

    datasources.push(messageCreateService);

    /*
     * Events and handlers
     */

    // Before Show
    var chatScreen_beforeshow = function() {
            Apperyio.CurrentScreen = "chatScreen";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var chatScreen_onLoad = function() {
            chatScreen_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            chatScreen_deviceEvents();
            chatScreen_windowEvents();
            chatScreen_elementsEvents();
        };

    // screen window events
    var chatScreen_windowEvents = function() {

            $('#chatScreen').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });
            $('#chatScreen').on({
                pageshow: function() {
                    try {
                        messageCreateService.execute({})
                    } catch (ex) {
                        console.log(ex.name + '  ' + ex.message);
                        hideSpinner();
                    };
                },
            });

        };

    // device events
    var chatScreen_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var chatScreen_elementsExtraJS = function() {
            // screen (chatScreen) extra code

        };

    // screen elements handler
    var chatScreen_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

            $(document).off("click", '#chatScreen_mobileheader [name="logoutButton"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        localStorage.setItem('currentUserName', '');
                        localStorage.setItem('currentUserId', '');
                        Apperyio.navigateTo('logIn', {
                            reverse: false
                        });

                    }
                },
            }, '#chatScreen_mobileheader [name="logoutButton"]');

            $(document).off("click", '#chatScreen_mobilecontainer [name="updateButton"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        try {
                            messageListService.execute({})
                        } catch (ex) {
                            console.log(ex.name + '  ' + ex.message);
                            hideSpinner();
                        };

                    }
                },
            }, '#chatScreen_mobilecontainer [name="updateButton"]');

            $(document).off("click", '#chatScreen_mobilecontainer [name="sendButton"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        try {
                            messageCreateService.execute({})
                        } catch (ex) {
                            console.log(ex.name + '  ' + ex.message);
                            hideSpinner();
                        };

                    }
                },
            }, '#chatScreen_mobilecontainer [name="sendButton"]');

        };

    $(document).off("pagebeforeshow", "#chatScreen").on("pagebeforeshow", "#chatScreen", function(event, ui) {
        chatScreen_beforeshow();
    });

    if (runBeforeShow) {
        chatScreen_beforeshow();
    } else {
        chatScreen_onLoad();
    }
};

$(document).off("pagecreate", "#chatScreen").on("pagecreate", "#chatScreen", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    chatScreen_js();
});

Register_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mobilelabel_1': 'Register_mobilelabel_1',
        'enteremail_1': 'Register_enteremail_1',
        'registerbutton_1': 'Register_registerbutton_1'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'Register';

    /*
     * Nonvisual components
     */
    var datasources = [];

    /*
     * Events and handlers
     */

    // Before Show
    var Register_beforeshow = function() {
            Apperyio.CurrentScreen = "Register";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var Register_onLoad = function() {
            Register_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            Register_deviceEvents();
            Register_windowEvents();
            Register_elementsEvents();
        };

    // screen window events
    var Register_windowEvents = function() {

            $('#Register').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var Register_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var Register_elementsExtraJS = function() {
            // screen (Register) extra code

        };

    // screen elements handler
    var Register_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

        };

    $(document).off("pagebeforeshow", "#Register").on("pagebeforeshow", "#Register", function(event, ui) {
        Register_beforeshow();
    });

    if (runBeforeShow) {
        Register_beforeshow();
    } else {
        Register_onLoad();
    }
};

$(document).off("pagecreate", "#Register").on("pagecreate", "#Register", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    Register_js();
});

logIn_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'mainButton': 'logIn_mainButton',
        'mobilelabel_1': 'logIn_mobilelabel_1',
        'loginField': 'logIn_loginField',
        'mobilelabel_3': 'logIn_mobilelabel_3',
        'passwordField': 'logIn_passwordField',
        'loginButton': 'logIn_loginButton'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'logIn';

    /*
     * Nonvisual components
     */
    var datasources = [];

    loginService = new Apperyio.DataSource(messages_login_service, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("logIn");
        },
        'onSuccess': function(data) {
            setVar_('currentUserName', 'logIn_loginField', 'text', '', this);
            Apperyio.navigateTo('chatScreen', {
                reverse: false
            });
        },
        'onError': function(jqXHR, textStatus, errorThrown) {
            alert("Failed to login");
        },
        'responseMapping': [{
            'PATH': ['_id'],
            'ID': '___local_storage___',
            'ATTR': 'currentUserid'
        }],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }, {
            'PATH': ['username'],
            'TYPE': 'STRING',
            'ID': 'loginField',
            'ATTR': 'value'
        }, {
            'PATH': ['password'],
            'TYPE': 'STRING',
            'ID': 'passwordField',
            'ATTR': 'value'
        }]
    });

    datasources.push(loginService);

    /*
     * Events and handlers
     */

    // Before Show
    var logIn_beforeshow = function() {
            Apperyio.CurrentScreen = "logIn";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var logIn_onLoad = function() {
            logIn_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            logIn_deviceEvents();
            logIn_windowEvents();
            logIn_elementsEvents();
        };

    // screen window events
    var logIn_windowEvents = function() {

            $('#logIn').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });
            $('#logIn').on({
                pageshow: function() {
                    setText('logIn_loginField', '');
                    setText('logIn_passwordField', '');
                    if (localStorage.getItem('currentUserName') && localStorage.getItem('currentUserId')) {
                        Appery.navigateTo('chatScreen', {});
                    };
                },
            });

        };

    // device events
    var logIn_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var logIn_elementsExtraJS = function() {
            // screen (logIn) extra code

        };

    // screen elements handler
    var logIn_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

            $(document).off("click", '#logIn_mobileheader [name="mainButton"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        Apperyio.navigateTo('Casuf_home', {
                            reverse: false
                        });

                    }
                },
            }, '#logIn_mobileheader [name="mainButton"]');

            $(document).off("click", '#logIn_mobilecontainer [name="loginButton"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        try {
                            loginService.execute({})
                        } catch (ex) {
                            console.log(ex.name + '  ' + ex.message);
                            hideSpinner();
                        };

                    }
                },
            }, '#logIn_mobilecontainer [name="loginButton"]');

        };

    $(document).off("pagebeforeshow", "#logIn").on("pagebeforeshow", "#logIn", function(event, ui) {
        logIn_beforeshow();
    });

    if (runBeforeShow) {
        logIn_beforeshow();
    } else {
        logIn_onLoad();
    }
};

$(document).off("pagecreate", "#logIn").on("pagecreate", "#logIn", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    logIn_js();
});

Twitter_js = function(runBeforeShow) {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'searchInput': 'Twitter_searchInput',
        'searchButton': 'Twitter_searchButton',
        'mobilegrid_3': 'Twitter_mobilegrid_3',
        'outputGrid_1': 'Twitter_outputGrid_1',
        'innerGrid': 'Twitter_innerGrid',
        'mobilegridcell_11': 'Twitter_mobilegridcell_11',
        'tweetPicture': 'Twitter_tweetPicture',
        'innerGrid_1': 'Twitter_innerGrid_1',
        'tweetFrom': 'Twitter_tweetFrom',
        'tweetTime': 'Twitter_tweetTime',
        'tweetText_1': 'Twitter_tweetText_1',
        'tweetText': 'Twitter_tweetText'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fix for jQuery Mobile's footer in Cordova webview on WP8 devices
        var msViewportStyle = document.createElement("style");
        msViewportStyle.appendChild(
        document.createTextNode("@media screen and (orientation: portrait){@-ms-viewport {width: 320px; height: 536px;user-zoom: fixed;max-zoom: 1;min-zoom: 1;}}" + "@media screen and (orientation:landscape){@-ms-viewport{width:480px;user-zoom:fixed;max-zoom:1;min-zoom:1;}}"));
        document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
    }

    Apperyio.CurrentScreen = 'Twitter';

    /*
     * Nonvisual components
     */
    var datasources = [];

    OAuth2DS = new Apperyio.DataSource(TwitterSearch_OAuth2Service, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("Twitter");
        },
        'onSuccess': function(data) {
            try {
                SearchDS.execute({})
            } catch (ex) {
                console.log(ex.name + '  ' + ex.message);
                hideSpinner();
            };
        },
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['access_token'],
            'ID': '___js___',
            'ATTR': 'setToken',
            'TRANSFORMATION': function(value, element) {
                TwitSearchGlobal.bearerToken = value;
            }
        }],
        'requestMapping': [{
            'PATH': ['Authorization'],
            'TYPE': 'STRING',
            'HEADER': true,
            'TRANSFORMATION': function(value) {
                var parameter = TwitSearchGlobal.encodeBase64(TwitterSearchSettings['consumerKey'] + ":" + TwitterSearchSettings['consumerKeySecret']);
                return "Basic " + parameter;
            }
        }, {
            'PATH': ['grant_type'],
            'TYPE': 'STRING',
            'ATTR': 'client_credentials'
        }, {
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'https://api.twitter.com/oauth2/token'
        }, {
            'PATH': ['appery-transformation'],
            'HEADER': true,
            'ATTR': 'checkTunnel'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1402739125163'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': 'd514f6a6-76bf-45b8-b87e-59c5af1790c7'
        }]
    });

    datasources.push(OAuth2DS);

    SearchDS = new Apperyio.DataSource(TwitterSearch_SearchService, {
        'onBeforeSend': function(jqXHR) {

        },
        'onComplete': function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("Twitter");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['statuses'],
            'ID': 'mobilegrid_3',
            'SET': [{
                'PATH': ['user', 'name'],
                'ID': 'tweetFrom',
                'ATTR': '@'
            }, {
                'PATH': ['user', 'profile_image_url'],
                'ID': 'tweetPicture',
                'ATTR': 'src'
            }, {
                'PATH': ['created_at'],
                'ID': 'tweetTime',
                'ATTR': '@'
            }, {
                'PATH': ['text'],
                'ID': 'tweetText',
                'ATTR': '@'
            }]
        }],
        'requestMapping': [{
            'PATH': ['Authorization'],
            'TYPE': 'STRING',
            'HEADER': true,
            'TRANSFORMATION': function(value) {
                return "Bearer " + TwitSearchGlobal.bearerToken;
            }
        }, {
            'PATH': ['lang'],
            'TYPE': 'STRING',
            'ATTR': 'en'
        }, {
            'PATH': ['q'],
            'TYPE': 'STRING',
            'ID': 'searchInput',
            'ATTR': 'value'
        }, {
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'https://api.twitter.com/1.1/search/tweets.json'
        }, {
            'PATH': ['appery-transformation'],
            'HEADER': true,
            'ATTR': 'checkTunnel'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1402739125165'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': 'd514f6a6-76bf-45b8-b87e-59c5af1790c7'
        }]
    });

    datasources.push(SearchDS);

    /*
     * Events and handlers
     */

    // Before Show
    var Twitter_beforeshow = function() {
            Apperyio.CurrentScreen = "Twitter";
            for (var idx = 0; idx < datasources.length; idx++) {
                datasources[idx].__setupDisplay();
            }
        };

    // On Load
    var Twitter_onLoad = function() {
            Twitter_elementsExtraJS();

            // TODO fire device events only if necessary (with JS logic)
            Twitter_deviceEvents();
            Twitter_windowEvents();
            Twitter_elementsEvents();
        };

    // screen window events
    var Twitter_windowEvents = function() {

            $('#Twitter').bind('pageshow orientationchange', function() {
                var _page = this;
                adjustContentHeightWithPadding(_page);
            });

        };

    // device events
    var Twitter_deviceEvents = function() {
            document.addEventListener("deviceready", function() {

            });
        };

    // screen elements extra js
    var Twitter_elementsExtraJS = function() {
            // screen (Twitter) extra code

        };

    // screen elements handler
    var Twitter_elementsEvents = function() {
            $(document).on("click", "a :input,a a,a fieldset label", function(event) {
                event.stopPropagation();
            });

            $(document).off("click", '#Twitter_mobilecontainer [name="searchButton"]').on({
                click: function() {
                    if (!$(this).attr('disabled')) {
                        TwitSearchGlobal.beforeSearchTwit();

                    }
                },
            }, '#Twitter_mobilecontainer [name="searchButton"]');

        };

    $(document).off("pagebeforeshow", "#Twitter").on("pagebeforeshow", "#Twitter", function(event, ui) {
        Twitter_beforeshow();
    });

    if (runBeforeShow) {
        Twitter_beforeshow();
    } else {
        Twitter_onLoad();
    }
};

$(document).off("pagecreate", "#Twitter").on("pagecreate", "#Twitter", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    Twitter_js();
});